From 88d3f0313609abcf44b439f8db341638e82274f6 Mon Sep 17 00:00:00 2001
From: hackeris <hackeris@qq.com>
Date: Thu, 7 Aug 2025 00:54:23 +0800
Subject: [PATCH 1/6] port qemu-user for aarch64 and x86_64 to OHOS

---
 .gitignore                        |  1 +
 linux-user/aarch64/syscall_64.tbl |  8 --------
 linux-user/elfload.c              |  2 +-
 linux-user/linuxload.c            |  3 ---
 linux-user/mmap.c                 | 19 ++++++++++++-------
 linux-user/signal.c               |  2 --
 linux-user/strace.c               |  1 -
 linux-user/syscall.c              |  3 ---
 linux-user/x86_64/syscall_64.tbl  |  6 ------
 9 files changed, 14 insertions(+), 31 deletions(-)

diff --git a/.gitignore b/.gitignore
index 61fa39967b5..3805615b8f4 100644
--- a/.gitignore
+++ b/.gitignore
@@ -20,3 +20,4 @@ GTAGS
 *.swp
 *.patch
 *.gcov
+.idea
\ No newline at end of file
diff --git a/linux-user/aarch64/syscall_64.tbl b/linux-user/aarch64/syscall_64.tbl
index 845e24eb372..d3b56606b30 100644
--- a/linux-user/aarch64/syscall_64.tbl
+++ b/linux-user/aarch64/syscall_64.tbl
@@ -218,14 +218,6 @@
 177	common	getegid				sys_getegid
 178	common	gettid				sys_gettid
 179	common	sysinfo				sys_sysinfo			compat_sys_sysinfo
-180	common	mq_open				sys_mq_open			compat_sys_mq_open
-181	common	mq_unlink			sys_mq_unlink
-182	time32	mq_timedsend			sys_mq_timedsend_time32
-182	64	mq_timedsend			sys_mq_timedsend
-183	time32	mq_timedreceive			sys_mq_timedreceive_time32
-183	64	mq_timedreceive			sys_mq_timedreceive
-184	common	mq_notify			sys_mq_notify			compat_sys_mq_notify
-185	common	mq_getsetattr			sys_mq_getsetattr		compat_sys_mq_getsetattr
 186	common	msgget				sys_msgget
 187	common	msgctl				sys_msgctl			compat_sys_msgctl
 188	common	msgrcv				sys_msgrcv			compat_sys_msgrcv
diff --git a/linux-user/elfload.c b/linux-user/elfload.c
index ea214105ff8..c5f742ad9df 100644
--- a/linux-user/elfload.c
+++ b/linux-user/elfload.c
@@ -2791,7 +2791,7 @@ static int pgb_try_mmap(uintptr_t addr, uintptr_t addr_last, bool keep)
     size_t size = addr_last - addr + 1;
     void *p = mmap((void *)addr, size, PROT_NONE,
                    MAP_ANONYMOUS | MAP_PRIVATE |
-                   MAP_NORESERVE | MAP_FIXED_NOREPLACE, -1, 0);
+                   MAP_NORESERVE, -1, 0);
     int ret;
 
     if (p == MAP_FAILED) {
diff --git a/linux-user/linuxload.c b/linux-user/linuxload.c
index 37f132be4af..fb2279b1510 100644
--- a/linux-user/linuxload.c
+++ b/linux-user/linuxload.c
@@ -47,9 +47,6 @@ static int prepare_binprm(struct linux_binprm *bprm)
     if (!S_ISREG(mode)) {   /* Must be regular file */
         return -EACCES;
     }
-    if (!(mode & 0111)) {   /* Must have at least one execute bit set */
-        return -EACCES;
-    }
 
     bprm->e_uid = geteuid();
     bprm->e_gid = getegid();
diff --git a/linux-user/mmap.c b/linux-user/mmap.c
index 002e1e668e6..a1a5248f94b 100644
--- a/linux-user/mmap.c
+++ b/linux-user/mmap.c
@@ -369,9 +369,10 @@ static bool mmap_frag(abi_ulong real_start, abi_ulong start, abi_ulong last,
          * outside of the fragment we need to map.  Allocate a new host
          * page to cover, discarding whatever else may have been present.
          */
+        //  unset MAP_FIXED_NOREPLACE for OHOS
         void *p = mmap(host_start, host_page_size,
                        target_to_host_prot(prot),
-                       flags | MAP_ANONYMOUS, -1, 0);
+                       flags & (~MAP_FIXED_NOREPLACE) | MAP_ANONYMOUS, -1, 0);
         if (p != host_start) {
             if (p != MAP_FAILED) {
                 do_munmap(p, host_page_size);
@@ -604,7 +605,8 @@ static abi_long mmap_h_eq_g(abi_ulong start, abi_ulong len,
         want_p = g2h_untagged(start);
     }
 
-    p = mmap(want_p, len, host_prot, flags, fd, offset);
+    //  unset MAP_FIXED_NOREPLACE for OHOS
+    p = mmap(want_p, len, host_prot, flags & (~MAP_FIXED_NOREPLACE), fd, offset);
     if (p == MAP_FAILED) {
         return -1;
     }
@@ -684,10 +686,11 @@ static abi_long mmap_h_lt_g(abi_ulong start, abi_ulong len, int host_prot,
     }
 
     if (flags & (MAP_FIXED | MAP_FIXED_NOREPLACE)) {
+        //  unset MAP_FIXED_NOREPLACE for OHOS
         if (fileend_adj) {
-            p = mmap(want_p, len, host_prot, flags | MAP_ANONYMOUS, -1, 0);
+            p = mmap(want_p, len, host_prot, flags & (~MAP_FIXED_NOREPLACE) | MAP_ANONYMOUS, -1, 0);
         } else {
-            p = mmap(want_p, len, host_prot, flags, fd, offset);
+            p = mmap(want_p, len, host_prot, flags & (~MAP_FIXED_NOREPLACE), fd, offset);
         }
         if (p != want_p) {
             if (p != MAP_FAILED) {
@@ -699,6 +702,7 @@ static abi_long mmap_h_lt_g(abi_ulong start, abi_ulong len, int host_prot,
         }
 
         if (fileend_adj) {
+            //  unset MAP_FIXED_NOREPLACE for OHOS
             void *t = mmap(p, len - fileend_adj, host_prot,
                            (flags & ~MAP_FIXED_NOREPLACE) | MAP_FIXED,
                            fd, offset);
@@ -872,14 +876,15 @@ static abi_long mmap_h_gt_g(abi_ulong start, abi_ulong len,
     host_len = real_last - real_start + 1;
     want_p += real_start - start;
 
+    //  unset MAP_FIXED_NOREPLACE for OHOS
     if (flags & MAP_ANONYMOUS) {
-        p = mmap(want_p, host_len, host_prot, flags, -1, 0);
+        p = mmap(want_p, host_len, host_prot, flags & (~MAP_FIXED_NOREPLACE), -1, 0);
     } else if (!misaligned_offset) {
-        p = mmap(want_p, host_len, host_prot, flags, fd,
+        p = mmap(want_p, host_len, host_prot, flags & (~MAP_FIXED_NOREPLACE), fd,
                  offset + real_start - start);
     } else {
         p = mmap(want_p, host_len, host_prot | PROT_WRITE,
-                 flags | MAP_ANONYMOUS, -1, 0);
+                 flags & (~MAP_FIXED_NOREPLACE) | MAP_ANONYMOUS, -1, 0);
     }
     if (p != want_p) {
         if (p != MAP_FAILED) {
diff --git a/linux-user/signal.c b/linux-user/signal.c
index cd0e7398aa4..daaa2ef7489 100644
--- a/linux-user/signal.c
+++ b/linux-user/signal.c
@@ -217,7 +217,6 @@ int do_sigprocmask(int how, const sigset_t *set, sigset_t *oldset)
 
         switch (how) {
         case SIG_BLOCK:
-            sigorset(&ts->signal_mask, &ts->signal_mask, set);
             break;
         case SIG_UNBLOCK:
             for (i = 1; i <= NSIG; ++i) {
@@ -1324,7 +1323,6 @@ static void handle_pending_signal(CPUArchState *cpu_env, int sig,
         /* block signals in the handler */
         blocked_set = ts->in_sigsuspend ?
             &ts->sigsuspend_mask : &ts->signal_mask;
-        sigorset(&ts->signal_mask, blocked_set, &set);
         ts->in_sigsuspend = 0;
 
         /* if the CPU is in VM86 mode, we restore the 32 bit values */
diff --git a/linux-user/strace.c b/linux-user/strace.c
index 3b744ccd4a7..277d58c155b 100644
--- a/linux-user/strace.c
+++ b/linux-user/strace.c
@@ -1119,7 +1119,6 @@ UNUSED static const struct flags openat2_resolve_flags[] = {
     FLAG_GENERIC(RESOLVE_NO_SYMLINKS),
     FLAG_GENERIC(RESOLVE_BENEATH),
     FLAG_GENERIC(RESOLVE_IN_ROOT),
-    FLAG_GENERIC(RESOLVE_CACHED),
 #endif
     FLAG_END,
 };
diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index 91360a072c7..48a532c52e1 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -7605,7 +7605,6 @@ static inline abi_long target_to_host_sigevent(struct sigevent *host_sevp,
     host_sevp->sigev_signo =
         target_to_host_signal(tswap32(target_sevp->sigev_signo));
     host_sevp->sigev_notify = tswap32(target_sevp->sigev_notify);
-    host_sevp->sigev_notify_thread_id = tswap32(target_sevp->_sigev_un._tid);
 
     unlock_user_struct(target_sevp, target_addr, 1);
     return 0;
@@ -11047,8 +11046,6 @@ static abi_long do_syscall1(CPUArchState *cpu_env, int num, abi_long arg1,
         }
         return ret;
 #endif
-    case TARGET_NR_vhangup:
-        return get_errno(vhangup());
 #ifdef TARGET_NR_syscall
     case TARGET_NR_syscall:
         return do_syscall(cpu_env, arg1 & 0xffff, arg2, arg3, arg4, arg5,
diff --git a/linux-user/x86_64/syscall_64.tbl b/linux-user/x86_64/syscall_64.tbl
index 7093ee21c0d..614f81f6782 100644
--- a/linux-user/x86_64/syscall_64.tbl
+++ b/linux-user/x86_64/syscall_64.tbl
@@ -249,12 +249,6 @@
 237	common	mbind			sys_mbind
 238	common	set_mempolicy		sys_set_mempolicy
 239	common	get_mempolicy		sys_get_mempolicy
-240	common	mq_open			sys_mq_open
-241	common	mq_unlink		sys_mq_unlink
-242	common	mq_timedsend		sys_mq_timedsend
-243	common	mq_timedreceive		sys_mq_timedreceive
-244	64	mq_notify		sys_mq_notify
-245	common	mq_getsetattr		sys_mq_getsetattr
 246	64	kexec_load		sys_kexec_load
 247	64	waitid			sys_waitid
 248	common	add_key			sys_add_key
-- 
2.43.0

