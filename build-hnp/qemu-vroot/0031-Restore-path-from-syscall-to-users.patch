From 819aed40b0fda51511565983c96dba01cd396d31 Mon Sep 17 00:00:00 2001
From: hackeris <hackeris@qq.com>
Date: Sat, 26 Jul 2025 09:58:09 +0800
Subject: [PATCH 31/32] Restore path from syscall to users

---
 include/qemu/path.h  |  1 +
 linux-user/syscall.c | 22 +++++++++++++++-------
 util/path.c          | 23 +++++++++++++++++++++++
 3 files changed, 39 insertions(+), 7 deletions(-)

diff --git a/include/qemu/path.h b/include/qemu/path.h
index d3e771c..dae02ec 100644
--- a/include/qemu/path.h
+++ b/include/qemu/path.h
@@ -3,6 +3,7 @@
 
 void init_paths(const char *prefix);
 char *relocate_path_at(int dirfd, const char *name, char *out, bool follow_symlink);
+char *restore_path(const char* name, char* out);
 char* resolve_with_path_env(const char* path_env, const char* name, char* out);
 char* resolve_abs_with_cwd(const char* path, char* out);
 
diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index b79336e..d560e23 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -394,7 +394,9 @@ static int sys_getcwd1(char *buf, size_t size)
       /* getcwd() sets errno */
       return (-1);
   }
-  return strlen(buf)+1;
+  char res[PATH_MAX];
+  restore_path(buf, res);
+  return strlen(res)+1;
 }
 
 #ifdef TARGET_NR_utimensat
@@ -9262,17 +9264,20 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
                 /* Short circuit this for the magic exe check. */
                 ret = -TARGET_EINVAL;
             } else if (is_proc_myself((const char *)p, "exe")) {
-                char real[PATH_MAX], *temp;
+                char real[PATH_MAX], user[PATH_MAX], *temp;
                 temp = realpath(exec_path, real);
+                if (temp) {
+                    temp = restore_path(real, user);
+                }
                 /* Return value is # of bytes that we wrote to the buffer. */
                 if (temp == NULL) {
                     ret = get_errno(-1);
                 } else {
                     /* Don't worry about sign mismatch as earlier mapping
                      * logic would have thrown a bad address error. */
-                    ret = MIN(strlen(real), arg3);
+                    ret = MIN(strlen(temp), arg3);
                     /* We cannot NUL terminate the string. */
-                    memcpy(p2, real, ret);
+                    memcpy(p2, temp, ret);
                 }
             } else {
                 char reloc[PATH_MAX];
@@ -9292,10 +9297,13 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
             if (!p || !p2) {
                 ret = -TARGET_EFAULT;
             } else if (is_proc_myself((const char *)p, "exe")) {
-                char real[PATH_MAX], *temp;
+                char real[PATH_MAX], user[PATH_MAX], *temp;
                 temp = realpath(exec_path, real);
-                ret = temp == NULL ? get_errno(-1) : strlen(real) ;
-                snprintf((char *)p2, arg4, "%s", real);
+                if (temp) {
+                    temp = restore_path(real, user);
+                }
+                ret = temp == NULL ? get_errno(-1) : strlen(temp) ;
+                snprintf((char *)p2, arg4, "%s", temp);
             } else {
                 char reloc[PATH_MAX];
                 ret = get_errno(readlinkat(arg1, relocate_path_at(arg1, p, reloc, false), p2, arg4));
diff --git a/util/path.c b/util/path.c
index e23eccf..00b8171 100644
--- a/util/path.c
+++ b/util/path.c
@@ -316,6 +316,29 @@ char *relocate_path_at(int dirfd, const char *name, char *out, bool follow_symli
     return out;
 }
 
+char *restore_path(const char* name, char* out) {
+
+	if (name[0] != '/') {
+		goto reuse;
+	}
+
+	char buf_base[PATH_MAX];
+	strcpy(buf_base, base);
+	int len = strlen(buf_base);
+	if (len == 0 || buf_base[len - 1] != '/') {
+		strcat(buf_base, "/");
+	}
+
+	if (strstr(name, buf_base) == name) {
+		strcpy(out, name + strlen(buf_base) - 1);
+		return out;
+	}
+
+reuse:
+	strcpy(out, name);
+	return out;
+}
+
 char *resolve_with_path_env(const char *path_env, const char *name, char *out) {
 
     if (!path_env || !name || !out) return NULL;
-- 
2.49.0.windows.1

