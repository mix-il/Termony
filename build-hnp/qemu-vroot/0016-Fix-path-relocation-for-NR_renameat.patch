From 300584b76a57acc6dc2bcf1060c193b7eff7813b Mon Sep 17 00:00:00 2001
From: hackeris <hackeris@qq.com>
Date: Mon, 14 Jul 2025 09:50:07 +0800
Subject: [PATCH 16/19] Fix path relocation for NR_renameat

---
 linux-user/syscall.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index 9dbee0d..ebd9511 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -8330,7 +8330,7 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
             else {
                 char reloc1[PATH_MAX];
                 char reloc2[PATH_MAX];
-                ret = get_errno(renameat(arg1, relocate_path_at(arg1, p, reloc1), arg3, relocate_path_at(arg2, p2, reloc2)));
+                ret = get_errno(renameat(arg1, relocate_path_at(arg1, p, reloc1), arg3, relocate_path_at(arg3, p2, reloc2)));
             }
             unlock_user(p2, arg4, 0);
             unlock_user(p, arg2, 0);
@@ -8348,7 +8348,7 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
             } else {
                 char reloc1[PATH_MAX];
                 char reloc2[PATH_MAX];
-                ret = get_errno(sys_renameat2(arg1, relocate_path_at(arg1, p, reloc1), arg3, relocate_path_at(arg2, p2, reloc2), arg5));
+                ret = get_errno(sys_renameat2(arg1, relocate_path_at(arg1, p, reloc1), arg3, relocate_path_at(arg3, p2, reloc2), arg5));
             }
             unlock_user(p2, arg4, 0);
             unlock_user(p, arg2, 0);
-- 
2.49.0.windows.1

