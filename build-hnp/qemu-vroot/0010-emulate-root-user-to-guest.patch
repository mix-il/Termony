From 2c5d0fb67af88aaa8c12364e0d23c6e678fa42fc Mon Sep 17 00:00:00 2001
From: hackeris <hackeris@qq.com>
Date: Sat, 23 Aug 2025 09:22:29 +0800
Subject: [PATCH 10/11] emulate root user to guest

---
 linux-user/syscall.c | 117 +++++++++++++++++++++++++------------------
 util/path.c          |   1 -
 2 files changed, 68 insertions(+), 50 deletions(-)

diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index 93212666364..d3ae503d758 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -12194,24 +12194,30 @@ static abi_long do_syscall1(CPUArchState *cpu_env, int num, abi_long arg1,
 #endif
 #ifdef TARGET_NR_getuid
     case TARGET_NR_getuid:
-        return get_errno(high2lowuid(getuid()));
+        // return get_errno(high2lowuid(getuid()));
+        return 0;
 #endif
 #ifdef TARGET_NR_getgid
     case TARGET_NR_getgid:
-        return get_errno(high2lowgid(getgid()));
+        // return get_errno(high2lowgid(getgid()));
+        return 0;
 #endif
 #ifdef TARGET_NR_geteuid
     case TARGET_NR_geteuid:
-        return get_errno(high2lowuid(geteuid()));
+        // return get_errno(high2lowuid(geteuid()));
+        return 0;
 #endif
 #ifdef TARGET_NR_getegid
     case TARGET_NR_getegid:
-        return get_errno(high2lowgid(getegid()));
+        // return get_errno(high2lowgid(getegid()));
+        return 0;
 #endif
     case TARGET_NR_setreuid:
-        return get_errno(sys_setreuid(low2highuid(arg1), low2highuid(arg2)));
+        // return get_errno(sys_setreuid(low2highuid(arg1), low2highuid(arg2)));
+        return 0;
     case TARGET_NR_setregid:
-        return get_errno(sys_setregid(low2highgid(arg1), low2highgid(arg2)));
+        // return get_errno(sys_setregid(low2highgid(arg1), low2highgid(arg2)));
+        return 0;
     case TARGET_NR_getgroups:
         { /* the same code as for TARGET_NR_getgroups32 */
             int gidsetsize = arg1;
@@ -12228,7 +12234,13 @@ static abi_long do_syscall1(CPUArchState *cpu_env, int num, abi_long arg1,
                     return -TARGET_ENOMEM;
                 }
             }
-            ret = get_errno(getgroups(gidsetsize, grouplist));
+            // ret = get_errno(getgroups(gidsetsize, grouplist));
+            if (gidsetsize > 0) {
+                grouplist[0] = 0;
+                ret = 1;
+            } else {
+                ret = 0;
+            }
             if (!is_error(ret) && gidsetsize > 0) {
                 target_grouplist = lock_user(VERIFY_WRITE, arg2,
                                              gidsetsize * sizeof(target_id), 0);
@@ -12245,54 +12257,59 @@ static abi_long do_syscall1(CPUArchState *cpu_env, int num, abi_long arg1,
         }
     case TARGET_NR_setgroups:
         { /* the same code as for TARGET_NR_setgroups32 */
-            int gidsetsize = arg1;
-            target_id *target_grouplist;
-            g_autofree gid_t *grouplist = NULL;
-            int i;
-
-            if (gidsetsize > NGROUPS_MAX || gidsetsize < 0) {
-                return -TARGET_EINVAL;
-            }
-            if (gidsetsize > 0) {
-                grouplist = g_try_new(gid_t, gidsetsize);
-                if (!grouplist) {
-                    return -TARGET_ENOMEM;
-                }
-                target_grouplist = lock_user(VERIFY_READ, arg2,
-                                             gidsetsize * sizeof(target_id), 1);
-                if (!target_grouplist) {
-                    return -TARGET_EFAULT;
-                }
-                for (i = 0; i < gidsetsize; i++) {
-                    grouplist[i] = low2highgid(tswapid(target_grouplist[i]));
-                }
-                unlock_user(target_grouplist, arg2,
-                            gidsetsize * sizeof(target_id));
-            }
-            return get_errno(sys_setgroups(gidsetsize, grouplist));
+            // int gidsetsize = arg1;
+            // target_id *target_grouplist;
+            // g_autofree gid_t *grouplist = NULL;
+            // int i;
+            //
+            // if (gidsetsize > NGROUPS_MAX || gidsetsize < 0) {
+            //     return -TARGET_EINVAL;
+            // }
+            // if (gidsetsize > 0) {
+            //     grouplist = g_try_new(gid_t, gidsetsize);
+            //     if (!grouplist) {
+            //         return -TARGET_ENOMEM;
+            //     }
+            //     target_grouplist = lock_user(VERIFY_READ, arg2,
+            //                                  gidsetsize * sizeof(target_id), 1);
+            //     if (!target_grouplist) {
+            //         return -TARGET_EFAULT;
+            //     }
+            //     for (i = 0; i < gidsetsize; i++) {
+            //         grouplist[i] = low2highgid(tswapid(target_grouplist[i]));
+            //     }
+            //     unlock_user(target_grouplist, arg2,
+            //                 gidsetsize * sizeof(target_id));
+            // }
+            // return get_errno(sys_setgroups(gidsetsize, grouplist));
+            return 0;
         }
     case TARGET_NR_fchown:
-        return get_errno(fchown(arg1, low2highuid(arg2), low2highgid(arg3)));
+        // return get_errno(fchown(arg1, low2highuid(arg2), low2highgid(arg3)));
+        return 0;
 #if defined(TARGET_NR_fchownat)
     case TARGET_NR_fchownat:
-        if (!(p = lock_user_string(arg2))) 
-            return -TARGET_EFAULT;
-        ret = get_errno(fchownat(arg1, relocate_path_at(arg1, p, reloc, true), low2highuid(arg3),
-                                     low2highgid(arg4), arg5));
-        unlock_user(p, arg2, 0);
-        return ret;
+        // if (!(p = lock_user_string(arg2)))
+        //     return -TARGET_EFAULT;
+        // ret = get_errno(fchownat(arg1, relocate_path_at(arg1, p, reloc, true), low2highuid(arg3),
+        //                              low2highgid(arg4), arg5));
+        // unlock_user(p, arg2, 0);
+        // return ret;
+        return 0;
 #endif
 #ifdef TARGET_NR_setresuid
     case TARGET_NR_setresuid:
-        return get_errno(sys_setresuid(low2highuid(arg1),
-                                       low2highuid(arg2),
-                                       low2highuid(arg3)));
+        // return get_errno(sys_setresuid(low2highuid(arg1),
+        //                                low2highuid(arg2),
+        //                                low2highuid(arg3)));
+        return 0;
 #endif
 #ifdef TARGET_NR_getresuid
     case TARGET_NR_getresuid:
         {
-            uid_t ruid, euid, suid;
-            ret = get_errno(getresuid(&ruid, &euid, &suid));
+            uid_t ruid = 0, euid = 0, suid = 0;
+            // ret = get_errno(getresuid(&ruid, &euid, &suid));
+            ret = 0;
             if (!is_error(ret)) {
                 if (put_user_id(high2lowuid(ruid), arg1)
                     || put_user_id(high2lowuid(euid), arg2)
@@ -12304,15 +12321,17 @@ static abi_long do_syscall1(CPUArchState *cpu_env, int num, abi_long arg1,
 #endif
 #ifdef TARGET_NR_getresgid
     case TARGET_NR_setresgid:
-        return get_errno(sys_setresgid(low2highgid(arg1),
-                                       low2highgid(arg2),
-                                       low2highgid(arg3)));
+        // return get_errno(sys_setresgid(low2highgid(arg1),
+        //                                low2highgid(arg2),
+        //                                low2highgid(arg3)));
+        return 0;
 #endif
 #ifdef TARGET_NR_getresgid
     case TARGET_NR_getresgid:
         {
-            gid_t rgid, egid, sgid;
-            ret = get_errno(getresgid(&rgid, &egid, &sgid));
+            gid_t rgid = 0, egid = 0, sgid = 0;
+            // ret = get_errno(getresgid(&rgid, &egid, &sgid));
+            ret = 0;
             if (!is_error(ret)) {
                 if (put_user_id(high2lowgid(rgid), arg1)
                     || put_user_id(high2lowgid(egid), arg2)
diff --git a/util/path.c b/util/path.c
index b8787076c32..acb6467aca0 100644
--- a/util/path.c
+++ b/util/path.c
@@ -47,7 +47,6 @@ static bool skip_relocation(const char* name)
         || strstr(name, "/sys/") == name
         || strcmp(name, "/sys") == 0
         || strcmp(name, "/etc/resolv.conf") == 0
-        || strcmp(name, "/etc/passwd") == 0
         || strcmp(name, "/dev") == 0
         || strstr(name, "/dev/") == name
     ;
-- 
2.43.0

