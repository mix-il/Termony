From e9ed2bc0260797b799d99b93028402012ac44d1b Mon Sep 17 00:00:00 2001
From: hackeris <hackeris@qq.com>
Date: Fri, 18 Jul 2025 22:06:09 +0800
Subject: [PATCH 23/24] Fix flags about symlink for NR_statx

---
 linux-user/syscall.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index 4710c8c..7a084db 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -10964,8 +10964,9 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
                 struct target_statx host_stx;
                 int mask = arg4;
 
+                bool follow_symlink = arg4 & AT_SYMLINK_NOFOLLOW ? false : true;
                 char reloc[PATH_MAX];
-                ret = get_errno(sys_statx(dirfd, relocate_path_at(dirfd, p, reloc, true), flags, mask, &host_stx));
+                ret = get_errno(sys_statx(dirfd, relocate_path_at(dirfd, p, reloc, follow_symlink), flags, mask, &host_stx));
                 if (!is_error(ret)) {
                     if (host_to_target_statx(&host_stx, arg5) != 0) {
                         unlock_user(p, arg2, 0);
@@ -10980,8 +10981,9 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
             }
 #endif
             {
+                bool follow_symlink = arg4 & AT_SYMLINK_NOFOLLOW ? false : true;
                 char reloc[PATH_MAX];
-                ret = get_errno(fstatat(dirfd, relocate_path_at(dirfd, p, reloc, true), &st, flags));
+                ret = get_errno(fstatat(dirfd, relocate_path_at(dirfd, p, reloc, follow_symlink), &st, flags));
                 unlock_user(p, arg2, 0);
 
                 if (!is_error(ret)) {
-- 
2.49.0.windows.1

